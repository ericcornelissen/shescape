# Check out ESLint at: https://eslint.org/

env:
  browser: false
  es2021: true
plugins:
  - ava
  - jsdoc
  - regexp
  - "@ericcornelissen/top"
parserOptions:
  ecmaVersion: latest
  sourceType: module
rules:
  # https://github.com/avajs/eslint-plugin-ava#readme
  ava/assertion-arguments:
    - error
  ava/hooks-order:
    - error
  ava/max-asserts:
    - error
    - 5
  ava/no-async-fn-without-await:
    - error
  ava/no-duplicate-modifiers:
    - error
  ava/no-identical-title:
    - error
  ava/no-ignored-test-files:
    - off
  ava/no-import-test-files:
    - error
  ava/no-incorrect-deep-equal:
    - error
  ava/no-inline-assertions:
    - error
  ava/no-nested-tests:
    - error
  ava/no-only-test:
    - error
  ava/no-skip-assert:
    - error
  ava/no-skip-test:
    - error
  ava/no-todo-implementation:
    - error
  ava/no-todo-test:
    - warn
  ava/no-unknown-modifiers:
    - error
  ava/prefer-async-await:
    - error
  ava/prefer-power-assert:
    - off
  ava/prefer-t-regex:
    - error
  ava/test-title:
    - error
  ava/test-title-format:
    - error
    - format: ^[^A-Z].*$
  ava/use-t:
    - off
  ava/use-t-throws-async-well:
    - error
  ava/use-t-well:
    - error
  ava/use-test:
    - error
  ava/use-true-false:
    - error

  # https://github.com/gajus/eslint-plugin-jsdoc#readme
  jsdoc/check-access:
    - off
  jsdoc/check-alignment:
    - error
  jsdoc/check-examples: # TODO: enable & configure when possible
    - off
  jsdoc/check-indentation:
    - error
    - excludeTags:
        - example
  jsdoc/check-line-alignment:
    - error
    - never
    - customSpacings:
        postDelimiter: 1
        postName: 1
        postTag: 1
        postType: 1
      tags:
        - license
        - module
        - overview
        - param
        - returns
        - since
        - throws
        - version
  jsdoc/check-param-names:
    - error
    - allowExtraTrailingParamDocs: false
      checkDestructured: true
      checkRestProperty: true
      disableExtraPropertyReporting: false
      enableFixer: false
      useDefaultObjectProperties: true
  jsdoc/check-property-names:
    - off
  jsdoc/check-syntax:
    - off
  jsdoc/check-tag-names:
    - error
    - definedTags: []
  jsdoc/check-types:
    - error
    - exemptTagContexts: []
      noDefaults: false
      unifyParentAndChildTypeChecks: false
  jsdoc/check-values:
    - error
    - allowedLicenses:
        - MPL-2.0
        - Unlicense
      numericOnlyVariation: false
  jsdoc/empty-tags:
    - error
    - tags:
        - constant
  jsdoc/implements-on-classes:
    - off
  jsdoc/match-description:
    - error
    - mainDescription: "^[A-Z`\\d][\\s\\S]*.\n$"
      tags:
        param: "^[A-Z].*\\.$"
        returns: "^[A-Z`].*\\.$"
        since: "^[0-9]\\.[0-9]\\.[0-9]"
        throws: "^[A-Z].*\\.$"
        yields: "^[A-Z`].*\\.$"
  jsdoc/match-name:
    - off
  jsdoc/multiline-blocks:
    - error
    - noFinalLineText: true
      noMultilineBlocks: false
      noSingleLineBlocks: true
      noZeroLineText: true
      singleLineTags: []
  jsdoc/newline-after-description:
    - error
    - always
  jsdoc/no-bad-blocks:
    - error
    - ignore: []
      preventAllMultiAsteriskBlocks: true
  jsdoc/no-defaults:
    - off
  jsdoc/no-missing-syntax:
    - off
  jsdoc/no-multi-asterisks:
    - error
    - allowWhitespace: true
      preventAtEnd: true
      preventAtMiddleLines: true
  jsdoc/no-restricted-syntax:
    - off
  jsdoc/no-types:
    - off
  jsdoc/no-undefined-types:
    - error
    - definedTypes: []
  jsdoc/require-asterisk-prefix:
    - error
    - always
  jsdoc/require-description-complete-sentence:
    - error
    - abbreviations:
        - e.g.
        - ...
      newlineBeforeCapsAssumesBadSentenceEnd: false
      tags: []
  jsdoc/require-description:
    - error
    - checkConstructors: false
      checkGetters: false
      checkSetters: false
      descriptionStyle: body
      exemptedBy: []
  jsdoc/require-example:
    - off
  jsdoc/require-file-overview:
    - error
    - tags:
        license:
          initialCommentsOnly: true
          mustExist: true
          preventDuplicates: true
        overview:
          initialCommentsOnly: true
          mustExist: true
          preventDuplicates: true
  jsdoc/require-hyphen-before-param-description:
    - error
    - never
  jsdoc/require-jsdoc:
    - error
    - publicOnly: false
      require:
        ArrowFunctionExpression: false
        ClassDeclaration: false
        ClassExpression: false
        FunctionDeclaration: true
        FunctionExpression: false
        MethodDefinition: false
  jsdoc/require-param:
    - error
  jsdoc/require-param-description:
    - error
  jsdoc/require-param-name:
    - error
  jsdoc/require-param-type:
    - error
  jsdoc/require-property:
    - off
  jsdoc/require-property-description:
    - off
  jsdoc/require-property-name:
    - off
  jsdoc/require-property-type:
    - off
  jsdoc/require-returns:
    - error
    - checkConstructors: false
      checkGetters: false
      exemptedBy: []
      forceRequireReturn: false
      forceReturnsWithAsync: false
  jsdoc/require-returns-check:
    - error
    - exemptGenerators: true
      exemptAsync: true
      reportMissingReturnForUndefinedTypes: false
  jsdoc/require-returns-description:
    - error
  jsdoc/require-returns-type:
    - error
  jsdoc/require-throws:
    - error
    - exemptedBy: []
  jsdoc/require-yields:
    - error
    - exemptedBy: []
      forceRequireNext: false
      forceRequireYields: true
      next: false
      nextWithGeneratorTag: false
      withGeneratorTag: false
  jsdoc/require-yields-check:
    - error
    - checkGeneratorsOnly: false
      next: false
  jsdoc/sort-tags:
    - error
    - alphabetizeExtras: false
      tagSequence:
        - example

        # file
        - overview
        - module
        - version
        - license

        # function
        - param
        - returns
        - throws
        - since

        # constant
        - constant
        - type

        # misc
        - deprecated
  jsdoc/tag-lines:
    - error
    - never
    - dropEndLines: false
  jsdoc/valid-types:
    - error
    - autoIncrementBase: true
      checkConstructors: false
      checkDestructured: true
      checkGetters: false
      checkRestProperty: true
      checkSetters: false
      checkTypesPattern: true
      checkDestructuredRoots: true
      enableFixer: true
      enableRestElementFixer: true
      enableRootFixer: true
      exemptedBy: []
      unnamedRootBase:
        - args
      useDefaultObjectProperties: true

  # https://github.com/ota-meshi/eslint-plugin-regexp#readme
  regexp/confusing-quantifier:
    - error
  regexp/control-character-escape:
    - error
  regexp/hexadecimal-escape:
    - error
    - never # prefer unicode escape
  regexp/letter-case:
    - error
    - caseInsensitive: lowercase
      controlEscape: lowercase
      hexadecimalEscape: uppercase
      unicodeEscape: uppercase
  regexp/match-any:
    - error
    - allows:
        - "[^]"
        - dotAll
  regexp/negation:
    - error
  regexp/no-contradiction-with-assertion:
    - error
  regexp/no-control-character:
    - off
  regexp/no-dupe-characters-character-class:
    - error
  regexp/no-dupe-disjunctions:
    - error
    - report: all
      reportExponentialBacktracking: potential
      reportUnreachable: potential
  regexp/no-empty-alternative:
    - error
  regexp/no-empty-capturing-group:
    - error
  regexp/no-empty-character-class:
    - error
  regexp/no-empty-group:
    - error
  regexp/no-empty-lookarounds-assertion:
    - error
  regexp/no-escape-backspace:
    - error
  regexp/no-invalid-regexp:
    - error
  regexp/no-invisible-character:
    - error
  regexp/no-lazy-ends:
    - error
    - ignorePartial: false
  regexp/no-legacy-features:
    - error
  regexp/no-misleading-unicode-character:
    - error
    - fixable: false
  regexp/no-non-standard-flag:
    - error
  regexp/no-obscure-range:
    - error
    - allowed: alphanumeric
  regexp/no-octal:
    - error
  regexp/no-optional-assertion:
    - error
  regexp/no-potentially-useless-backreference:
    - error
  regexp/no-standalone-backslash:
    - error
  regexp/no-super-linear-backtracking:
    - error
    - report: potential
  regexp/no-super-linear-move:
    - error
    - ignoreSticky: false
      report: potential
  regexp/no-trivially-nested-assertion:
    - error
  regexp/no-trivially-nested-quantifier:
    - error
  regexp/no-unused-capturing-group:
    - error
    - fixable: false
  regexp/no-useless-assertions:
    - error
  regexp/no-useless-backreference:
    - error
  regexp/no-useless-character-class:
    - error
  regexp/no-useless-dollar-replacements:
    - error
  regexp/no-useless-escape:
    - error
  regexp/no-useless-flag:
    - error
  regexp/no-useless-lazy:
    - error
  regexp/no-useless-non-capturing-group:
    - error
  regexp/no-useless-quantifier:
    - error
  regexp/no-useless-range:
    - error
  regexp/no-useless-two-nums-quantifier:
    - error
  regexp/no-zero-quantifier:
    - error
  regexp/optimal-lookaround-quantifier:
    - error
  regexp/optimal-quantifier-concatenation:
    - error
    - capturingGroups: report
  regexp/prefer-character-class:
    - error
    - minAlternatives: 2
  regexp/prefer-d:
    - error
    - insideCharacterClass: range
  regexp/prefer-escape-replacement-dollar-char:
    - error
  regexp/prefer-lookaround:
    - error
    - strictTypes: true
  regexp/prefer-named-backreference:
    - error
  regexp/prefer-named-capture-group:
    - off
  regexp/prefer-named-replacement:
    - error
  regexp/prefer-plus-quantifier:
    - error
  regexp/prefer-predefined-assertion:
    - error
  regexp/prefer-quantifier:
    - error
  regexp/prefer-question-quantifier:
    - error
  regexp/prefer-range:
    - error
    - target: alphanumeric
  regexp/prefer-regexp-exec:
    - error
  regexp/prefer-regexp-test:
    - error
  regexp/prefer-result-array-groups:
    - error
    - strictTypes: true
  regexp/prefer-star-quantifier:
    - error
  regexp/prefer-unicode-codepoint-escapes:
    - error
  regexp/prefer-w:
    - error
  regexp/require-unicode-regexp:
    - error
  regexp/sort-alternatives:
    - error
  regexp/sort-character-class-elements:
    - error
    - order:
        - \s
        - \w
        - \d
        - \p
        - "*"
  regexp/sort-flags:
    - error
  regexp/strict:
    - error
  regexp/unicode-escape:
    - error
    - unicodeEscape
  regexp/use-ignore-case:
    - error

  # https://github.com/ericcornelissen/eslint-plugin-top#readme
  "@ericcornelissen/top/no-top-level-variables":
    - error
  "@ericcornelissen/top/no-top-level-side-effect":
    - error

settings:
  jsdoc:
    ignorePrivate: false
    ignoreInternal: false
    maxLines: 1
    minLines: 0
    mode: jsdoc
    preferredTypes:
      # For arrays, prefer `type[]`
      "Array.<>": false
      "Array<>": false

      # For objects, prefer `Object<type, type>`
      "Object.<>": false
    structuredTags:
      throws:
        required:
          - type
    tagNamePreference:
      constant: constant
      file: overview
      param: param
      returns: returns
      throws: throws
      yields: yields
overrides:
  # Tests
  - files:
      - test/**/*.test.cjs
      - test/**/*.test.js
    rules:
      jsdoc/require-jsdoc:
        - off
  # Scripts
  - files:
      - script/**/*.js
    rules:
      jsdoc/require-jsdoc:
        - off
  # Configuration files
  - files:
      - rollup.config.js
    rules:
      jsdoc/require-file-overview:
        - off
  # Unpublished code
  - files:
      - script/**
      - test/**
    rules:
      "@ericcornelissen/top/no-top-level-variables":
        - off
      "@ericcornelissen/top/no-top-level-side-effect":
        - off
ignorePatterns:
  - _reports/
  - .temp/
  - node_modules/
  - index.cjs
