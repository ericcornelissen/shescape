name: Fuzz
on:
  workflow_call:
    inputs:
      duration:
        required: true
        type: string
      os:
        required: true
        type: string
      shell:
        required: true
        type: string
      targets:
        required: true
        type: string

permissions: read-all

jobs:
  fuzz:
    name: ${{ inputs.shell }} (${{ matrix.target }})
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        target: ${{ fromJson(inputs.targets) }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: block
          allowed-endpoints: >
            actions-results-receiver-production.githubapp.com:443
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            azure.archive.ubuntu.com:80
            github.com:443
            gitlab.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            pipelines.actions.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          persist-credentials: false
      - name: Create identifier
        uses: actions/github-script@e69ef5462fd455e02edcaf4dd7708eda96b9eda0 # v7.0.0
        id: run-id
        env:
          OS: ${{ inputs.os }}
          SHELL: ${{ inputs.shell }}
          TARGET: ${{ matrix.target }}
        with:
          result-encoding: string
          script: |
            const path = `${process.env.SHELL}`
            const fileName = path.split(/\//g).pop()
            const shellName = fileName.endsWith(".exe") ?
              fileName.slice(0, -4) : fileName
            return `${process.env.OS}-${shellName}-${process.env.TARGET}`
      - name: Install Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Cache corpus
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: .corpus
          key: fuzz-${{ steps.run-id.outputs.result }}-${{ github.run_number }}
          restore-keys: |
            fuzz-${{ steps.run-id.outputs.result }}
      - name: Install csh
        if: ${{ inputs.shell == '/bin/csh' }}
        run: sudo apt-get --assume-yes install csh
      - name: Install Zsh
        if: ${{ inputs.shell == '/bin/zsh' }}
        run: sudo apt-get --assume-yes install zsh
      - name: Install dependencies
        run: npm clean-install
      - name: Fuzz (target '${{ matrix.target }}')
        id: fuzz
        shell: bash {0}
        env:
          DURATION: ${{ inputs.duration }}
          FUZZ_SHELL: ${{ inputs.shell }}
          TARGET: ${{ matrix.target }}
        run: |
          timeout "${DURATION}s" npm run fuzz "${TARGET}"
          export EXIT_CODE="$?"
          {
            if [[ ("$EXIT_CODE" == 124) ]]; then
              echo 'fuzz-error=false'
              echo 'script-error=false'
            elif [[ ("$EXIT_CODE" == 1) ]]; then
                echo 'fuzz-error=true'
                echo 'script-error=false'
            else
              echo 'fuzz-error=false'
              echo 'script-error=true'
              echo "exit-code=$EXIT_CODE"
            fi
          } >> "$GITHUB_OUTPUT"
      - name: Check for unexpected error
        if: ${{ steps.fuzz.outputs.script-error == 'true' }}
        env:
          EXIT_CODE: ${{ steps.fuzz.outputs.exit-code }}
        run: |
          echo "Unexpected error: ${EXIT_CODE}"
          exit 1
      - name: Upload crash (if any)
        if: ${{ steps.fuzz.outputs.fuzz-error == 'true' }}
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: fuzz-crash-${{ steps.run-id.outputs.result }}
          path: |
            .corpus/
            crash-*
      - name: Error for fuzz crash
        if: ${{ steps.fuzz.outputs.fuzz-error == 'true' }}
        run: exit 1
