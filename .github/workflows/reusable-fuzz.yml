name: Fuzz
on:
  workflow_call:
    inputs:
      duration:
        required: true
        type: string
      platform:
        required: true
        type: string

permissions: read-all

jobs:
  determine-matrix:
    name: Determine matrix
    runs-on: ubuntu-22.04
    outputs:
      jobs: ${{ steps.shells.outputs.result }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@6b3083af2869dc3314a0257a42f4af696cc79ba3 # v2.3.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            actions-results-receiver-production.githubapp.com:443
            github.com:443
      - name: Checkout repository
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1
      - name: Determine shells to fuzz
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        id: shells
        with:
          result-encoding: json
          script: |
            const { determineMatrix } = await import('${{ github.workspace }}/.github/workflows/fuzz-matrix.js')
            return await determineMatrix({
              unix: ${{ contains(inputs.platform, 'unix') }},
              windows: ${{ contains(inputs.platform, 'windows') }},
            })
  fuzz:
    name: ${{ matrix.shell }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    needs:
      - determine-matrix
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include: ${{ fromJSON(needs.determine-matrix.outputs.jobs) }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@6b3083af2869dc3314a0257a42f4af696cc79ba3 # v2.3.1
        with:
          egress-policy: block
          allowed-endpoints: >
            actions-results-receiver-production.githubapp.com:443
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            azure.archive.ubuntu.com:80
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            pipelines.actions.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1
      - name: Get git context
        id: git
        run: |
          COMMIT_SHA="$(git rev-parse HEAD)"
          echo "commit-sha=$COMMIT_SHA" >> "$GITHUB_OUTPUT"
      - name: Create identifier
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        id: run-id
        with:
          result-encoding: string
          script: |
            const path = "${{ matrix.shell }}"
            const fileName = path.split(/\//g).pop()
            const shellName = fileName.endsWith(".exe") ?
              fileName.slice(0, -4) : fileName
            return `${{ matrix.os }}-${shellName}-${{ matrix.target }}`
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Cache corpus
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: .corpus
          key: fuzz-${{ steps.run-id.outputs.result }}-${{ github.run_number }}
          restore-keys: |
            fuzz-${{ steps.run-id.outputs.result }}
      - name: Install Zsh
        if: ${{ matrix.shell == '/bin/zsh' }}
        run: sudo apt-get --assume-yes install zsh
      - name: Install csh
        if: ${{ matrix.shell == '/bin/csh' }}
        run: sudo apt-get --assume-yes install csh
      - name: Install dependencies
        run: npm clean-install
      - name: Fuzz (target '${{ matrix.target }}')
        id: fuzz
        shell: bash {0}
        env:
          FUZZ_SHELL: ${{ matrix.shell }}
        run: |
          timeout '${{ inputs.duration }}' npm run fuzz '${{ matrix.target }}'
          export EXIT_CODE=$?
          if [[ ($EXIT_CODE == 124) ]]; then
            echo 'fuzz-error=false' >> $GITHUB_OUTPUT
            echo 'script-error=false' >> $GITHUB_OUTPUT
          elif [[ ($EXIT_CODE == 1) ]]; then
            echo 'fuzz-error=true' >> $GITHUB_OUTPUT
            echo 'script-error=false' >> $GITHUB_OUTPUT
          else
            echo 'fuzz-error=false' >> $GITHUB_OUTPUT
            echo 'script-error=true' >> $GITHUB_OUTPUT
            echo "exit-code=$EXIT_CODE" >> $GITHUB_OUTPUT
          fi
      - name: Check for unexpected error
        if: ${{ steps.fuzz.outputs.script-error == 'true' }}
        run: |
          echo 'Unexpected error: ${{ steps.fuzz.outputs.exit-code }}'
          exit 1
      - name: Upload crash (if any)
        if: ${{ steps.fuzz.outputs.fuzz-error == 'true' }}
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: fuzz-crash-${{ steps.run-id.outputs.result }}-${{ steps.git.outputs.commit-sha }}
          path: |
            .corpus/
            crash-*
      - name: Error for fuzz crash
        if: ${{ steps.fuzz.outputs.fuzz-error == 'true' }}
        run: exit 1
