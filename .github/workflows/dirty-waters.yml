name: Dirty Waters
on:
  pull_request: ~
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch: ~

permissions: read-all

jobs:
  analyze:
    name: Analysis
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Check if first dirty-waters run
        id: check-first-run
        run: |
          WORKFLOW_FILE=$(gh api 'repos/${{ github.repository }}/actions/workflows' --jq '.workflows[] | select(.name == "${{ github.workflow }}") | .path' | xargs basename)
          RUNS=$(gh api "repos/${{ github.repository }}/actions/workflows/$WORKFLOW_FILE/runs" --jq '[.workflow_runs[] | select(.conclusion=="success")] | length')
          echo "is_first_run=$([[ "$RUNS" -le 1 ]] && echo 'true' || echo 'false')" >>"$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Static Dirty Waters analysis
        if: ${{ steps.check-first-run.outputs.is_first_run == 'true' }}
        uses: chains-project/dirty-waters-action@227b7f6be3116341840d078b08db2ecfbebe3cdc # v1.7
        with:
          allow_pr_comment: true
          comment_on_commit: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_event_before: ${{ github.event.before }}
          ignore_cache: ${{ github.event.inputs.ignore_cache }}
          latest_commit_sha: ${{ github.sha }}
          project_repo: ${{ github.repository }}
          package_manager: npm
      - name: Run Differential Dirty Waters Analysis
        if: ${{ steps.check-first-run.outputs.is_first_run != 'true' }}
        uses: chains-project/dirty-waters-action@227b7f6be3116341840d078b08db2ecfbebe3cdc # v1.7
        with:
          differential_analysis: true
          allow_pr_comment: true
          comment_on_commit: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_event_before: ${{ github.event.before }}
          ignore_cache: ${{ github.event.inputs.ignore_cache }}
          latest_commit_sha: ${{ github.sha }}
          project_repo: ${{ github.repository }}
          package_manager: npm
