name: Test
on:
  pull_request:
    paths:
      - "src/**.js"
      - "test/**"
      - ".github/workflows/test.yml"
      - ".nvmrc"
      - "index.js"
      - "package-lock.json"
      - "rollup.config.js"
      - "stryker.config.json"
  push:
    paths:
      - "src/**.js"
      - "test/**"
      - ".github/workflows/test.yml"
      - ".nvmrc"
      - "index.js"
      - "package-lock.json"
      - "rollup.config.js"
      - "stryker.config.json"
  schedule:
    - cron: "0 0 * * *"

permissions: read-all

jobs:
  benchmark:
    name: Benchmark
    needs: [unit]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Cache benchmark data
        uses: actions/cache@v3.0.5
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      - name: Run benchmark
        run: npm run benchmark | tee output.txt
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1.14.0
        with:
          comment-on-alert: true
          external-data-json-path: ./cache/benchmark-data.json
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file-path: output.txt
          tool: benchmarkjs
  compatibility:
    name: Compatibility
    needs: [integration, transpile]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.13.0, 12, 14, 16, 18]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install compatible npm version
        run: npm install --global npm@8.1.2
      - name: Install dependencies
        run: npm ci
      - name: Transpile to CommonJS
        run: npm run transpile
      - name: Run compatibility tests
        run: npm run coverage:compatibility
  e2e:
    name: End-to-end
    needs: [integration]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run end-to-end tests
        run: npm run coverage:e2e
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        if: ${{ always() }}
        with:
          file: ./_reports/coverage/e2e/lcov.info
          flags: e2e-${{ matrix.os }}
  integration:
    name: Integration
    needs: [transpile, unit]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Transpile to CommonJS
        run: npm run transpile
      - name: Run integration tests
        run: npm run coverage:integration
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        if: ${{ always() }}
        with:
          file: ./_reports/coverage/integration/lcov.info
          flags: integration-${{ matrix.os }}
  fuzz:
    name: Fuzz
    needs: [e2e]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: zsh
            os: ubuntu-latest
            shell: /bin/zsh
          - name: bash
            os: ubuntu-latest
            shell: /bin/bash
          - name: dash
            os: ubuntu-latest
            shell: /bin/dash
          - name: cmd.exe
            os: windows-latest
            shell: cmd.exe
          - name: powershell
            os: windows-latest
            shell: powershell.exe
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            azure.archive.ubuntu.com:80
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            pipelines.actions.githubusercontent.com:443
            registry.npmjs.org:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Cache corpus
        uses: actions/cache@v3.0.5
        with:
          path: .corpus
          key: ${{ matrix.os }}-${{ matrix.shell }}-fuzz-${{ github.run_number }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.shell }}-fuzz-
      - name: Install Zsh
        if: ${{ matrix.shell == '/bin/zsh' }}
        run: sudo apt-get -y install zsh
      - name: Install dependencies
        run: npm ci

      - name: Fuzz exec/execSync
        id: fuzz-exec
        shell: bash {0}
        env:
          FUZZ_SHELL: ${{ matrix.shell }}
        run: |
          timeout 5m npm run fuzz exec
          export EXIT_CODE=$?
          if [[ ($EXIT_CODE == 124) ]]
          then
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::false"
          elif [[ ($EXIT_CODE == 1) ]]
          then
            echo "::set-output name=fuzz-error::true"
            echo "::set-output name=script-error::false"
          else
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::true"
            echo "::set-output name=exit-code::"$EXIT_CODE
          fi
      - name: Check for unexpected error
        if: ${{ steps.fuzz-exec.outputs.script-error == 'true' }}
        run: |
          echo "Unexpected error: ${{ steps.fuzz-exec.outputs.exit-code }}"
          exit 1
      - name: Upload crash (if any)
        if: ${{ steps.fuzz-exec.outputs.fuzz-error == 'true' }}
        uses: actions/upload-artifact@v3.1.0
        with:
          name: fuzz-crash-${{ matrix.os }}-${{ matrix.name }}-exec
          path: |
            .corpus/
            crash-*
      - name: Error for fuzz crash
        if: ${{ steps.fuzz-exec.outputs.fuzz-error == 'true' }}
        run: exit 1

      - name: Fuzz execFile/execFileSync
        id: fuzz-exec-file
        shell: bash {0}
        env:
          FUZZ_SHELL: ${{ matrix.shell }}
        run: |
          timeout 5m npm run fuzz execFile
          export EXIT_CODE=$?
          if [[ ($EXIT_CODE == 124) ]]
          then
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::false"
          elif [[ ($EXIT_CODE == 1) ]]
          then
            echo "::set-output name=fuzz-error::true"
            echo "::set-output name=script-error::false"
          else
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::true"
            echo "::set-output name=exit-code::"$EXIT_CODE
          fi
      - name: Check for unexpected error
        if: ${{ steps.fuzz-exec-file.outputs.script-error == 'true' }}
        run: |
          echo "Unexpected error: ${{ steps.fuzz-exec-file.outputs.exit-code }}"
          exit 1
      - name: Upload crash (if any)
        if: ${{ steps.fuzz-exec-file.outputs.fuzz-error == 'true' }}
        uses: actions/upload-artifact@v3.1.0
        with:
          name: fuzz-crash-${{ matrix.os }}-${{ matrix.name }}-exec-file
          path: |
            .corpus/
            crash-*
      - name: Error for fuzz crash
        if: ${{ steps.fuzz-exec-file.outputs.fuzz-error == 'true' }}
        run: exit 1

      - name: Fuzz fork
        id: fuzz-fork
        shell: bash {0}
        env:
          FUZZ_SHELL: ${{ matrix.shell }}
        run: |
          timeout 5m npm run fuzz fork
          export EXIT_CODE=$?
          if [[ ($EXIT_CODE == 124) ]]
          then
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::false"
          elif [[ ($EXIT_CODE == 1) ]]
          then
            echo "::set-output name=fuzz-error::true"
            echo "::set-output name=script-error::false"
          else
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::true"
            echo "::set-output name=exit-code::"$EXIT_CODE
          fi
      - name: Check for unexpected error
        if: ${{ steps.fuzz-fork.outputs.script-error == 'true' }}
        run: |
          echo "Unexpected error: ${{ steps.fuzz-fork.outputs.exit-code }}"
          exit 1
      - name: Upload crash (if any)
        if: ${{ steps.fuzz-fork.outputs.fuzz-error == 'true' }}
        uses: actions/upload-artifact@v3.1.0
        with:
          name: fuzz-crash-${{ matrix.os }}-${{ matrix.name }}-fork
          path: |
            .corpus/
            crash-*
      - name: Error for fuzz crash
        if: ${{ steps.fuzz-fork.outputs.fuzz-error == 'true' }}
        run: exit 1

      - name: Fuzz spawn/spawnSync
        id: fuzz-spawn
        shell: bash {0}
        env:
          FUZZ_SHELL: ${{ matrix.shell }}
        run: |
          timeout 5m npm run fuzz spawn
          export EXIT_CODE=$?
          if [[ ($EXIT_CODE == 124) ]]
          then
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::false"
          elif [[ ($EXIT_CODE == 1) ]]
          then
            echo "::set-output name=fuzz-error::true"
            echo "::set-output name=script-error::false"
          else
            echo "::set-output name=fuzz-error::false"
            echo "::set-output name=script-error::true"
            echo "::set-output name=exit-code::"$EXIT_CODE
          fi
      - name: Check for unexpected error
        if: ${{ steps.fuzz-spawn.outputs.script-error == 'true' }}
        run: |
          echo "Unexpected error: ${{ steps.fuzz-spawn.outputs.exit-code }}"
          exit 1
      - name: Upload crash (if any)
        if: ${{ steps.fuzz-spawn.outputs.fuzz-error == 'true' }}
        uses: actions/upload-artifact@v3.1.0
        with:
          name: fuzz-crash-${{ matrix.os }}-${{ matrix.name }}-spawn
          path: |
            .corpus/
            crash-*
      - name: Error for fuzz crash
        if: ${{ steps.fuzz-spawn.outputs.fuzz-error == 'true' }}
        run: exit 1
  mutation:
    name: Mutation
    needs: [unit]
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            dashboard.stryker-mutator.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run mutation tests
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        run: npm run test:mutation
  property:
    name: Property
    needs: [unit]
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run property tests
        run: npm run coverage:property
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        if: ${{ always() }}
        with:
          file: ./_reports/coverage/property/lcov.info
          flags: property
  transpile:
    name: Transpile
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Transpile to CommonJS
        run: npm run transpile
  unit:
    name: Unit
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.4
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
            y2oiacprodeus2file6.blob.core.windows.net:443
      - name: Check out code
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests with coverage
        run: npm run coverage:unit
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        if: ${{ always() }}
        with:
          file: ./_reports/coverage/unit/lcov.info
          flags: unit
